name: Build Image docker en environment de Dev

on:
  push:
    branches:
      - develop

jobs:
  build-and-push:
    name: Build & Push Docker image to GHCR
    runs-on: ubuntu-latest
    environment: Dev
    permissions:
      contents: read
      packages: write
    
    env:
      APACHE_VHOST: dev
      APACHE_PORT: 8080
      DB_PORT: 3306
      APP_ENV: dev

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install PHP and Composer
        run: |
          sudo apt update
          sudo apt install -y php php-mbstring php-xml php-curl unzip
          curl -sS https://getcomposer.org/installer | php
        working-directory: ./videgrenier

      - name: Install PHP and Composer
        run: |
          sudo apt update
          sudo apt install -y php php-mbstring php-xml php-curl unzip curl git
          EXPECTED_SIGNATURE="$(curl -s https://composer.github.io/installer.sig)"
          php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
          ACTUAL_SIGNATURE="$(php -r "echo hash_file('sha384', 'composer-setup.php');")"
          if [ "$EXPECTED_SIGNATURE" != "$ACTUAL_SIGNATURE" ]; then
              >&2 echo 'ERROR: Invalid Composer installer signature'
              rm composer-setup.php
              exit 1
          fi
          php composer-setup.php --install-dir=/usr/local/bin --filename=composer
          rm composer-setup.php

      - name: Install PHP dependencies
        run: composer install
        working-directory: ./videgrenier


      - name: Run PHPUnit tests
        run: ./vendor/bin/phpunit tests/
        working-directory: ./videgrenier

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Generate .env file from secrets
        run: |
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_PORT=$DB_PORT" >> .env


      - name: Build and push Docker image to GHCR
        run: |
          IMAGE_ID=ghcr.io/doubleriichi/videgrenier-app
          docker build \
            --build-arg APACHE_VHOST=$APACHE_VHOST \
            --build-arg PORT=$APACHE_PORT \
            -t $IMAGE_ID:$APP_ENV-latest \
            -f dockerfile .
          
          docker push $IMAGE_ID:$APP_ENV-latest
